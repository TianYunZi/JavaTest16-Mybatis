<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="chapter02.practise.org.mapper.UserMapper">

    <resultMap id="userMap" type="chapter02.practise.org.model.SysUser">
        <id property="id" column="id"/>
        <result property="userName" column="user_name"/>
        <result property="userPassword" column="user_password"/>
        <result property="userEmail" column="user_email"/>
        <result property="userInfo" column="user_info"/>
        <result property="headImg" column="head_img" jdbcType="BLOB"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <select id="selectById" resultMap="userMap">
        SELECT * FROM sys_user WHERE id = #{id}
    </select>

    <select id="selectAll" resultType="chapter02.practise.org.model.SysUser">
        select id,
	    	user_name userName,
	        user_password userPassword,
	        user_email userEmail,
	        user_info userInfo,
	        head_img headImg,
	        create_time createTime
	    from sys_user
    </select>

    <select id="selectRolesByUserId" resultType="chapter02.practise.org.model.SysRole">
        select
			r.id,
			r.role_name roleName,
			r.enabled,
			r.create_by createBy,
			r.create_time createTime,
			u.user_name as "user.userName",
			u.user_email as "user.userEmail"
		from sys_user u
		inner join sys_user_role ur on u.id = ur.user_id
		inner join sys_role r on ur.role_id = r.id
	    where u.id = #{userId}
    </select>

    <insert id="insert">
        INSERT INTO sys_user (id,user_name,user_password,user_email,user_info,head_img,create_time)
        VALUES (#{id}, #{userName}, #{userPassword}, #{userEmail},#{userInfo},
        #{headImg, jdbcType=BLOB}, #{createTime, jdbcType=TIMESTAMP})
    </insert>

    <insert id="insert2" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO sys_user(user_name, user_password, user_email, user_info, head_img, create_time)
        VALUES (#{userName},#{userPassword},#{userEmail},#{userInfo},
        #{headImg, jdbcType=BLOB},#{createTime, jdbcType=TIMESTAMP})
    </insert>

    <!-- Mysql 的例子，查询多个列的时候需要 keyColumn -->
    <insert id="insert3">
        insert into sys_user(
        user_name, user_password, user_email,
        user_info, head_img, create_time)
        values(
        #{userName}, #{userPassword}, #{userEmail},
        #{userInfo}, #{headImg, jdbcType=BLOB}, #{createTime, jdbcType=TIMESTAMP})
        <selectKey keyColumn="id" resultType="long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <!-- Oracle 的例子，查询多个列的时候需要 keyColumn -->
    <insert id="insertOracle">
        <selectKey keyColumn="id" resultType="long" keyProperty="id" order="BEFORE">
            SELECT SEQ_USER.nextval from dual
        </selectKey>
        insert into sys_user(
        id, user_name, user_password, user_email,
        user_info, head_img, create_time)
        values(
        #{id}, #{userName}, #{userPassword}, #{userEmail},
        #{userInfo}, #{headImg, jdbcType=BLOB}, #{createTime, jdbcType=TIMESTAMP})
    </insert>
</mapper>